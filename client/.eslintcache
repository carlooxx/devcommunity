[{"/home/karlo/Documents/RESTful API/devcomunity/client/src/index.js":"1","/home/karlo/Documents/RESTful API/devcomunity/client/src/reportWebVitals.js":"2","/home/karlo/Documents/RESTful API/devcomunity/client/src/App.js":"3","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Nav.js":"4","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Landing.js":"5","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/auth/Register.js":"6","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/auth/Login.js":"7","/home/karlo/Documents/RESTful API/devcomunity/client/src/store.js":"8","/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/index.js":"9","/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/alert.js":"10","/home/karlo/Documents/RESTful API/devcomunity/client/src/action/types.js":"11","/home/karlo/Documents/RESTful API/devcomunity/client/src/action/alert.js":"12","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Alert.js":"13","/home/karlo/Documents/RESTful API/devcomunity/client/src/action/auth.js":"14","/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/auth.js":"15","/home/karlo/Documents/RESTful API/devcomunity/client/src/util/tokenHeaderSet.js":"16","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/dashboard/Dashboard.js":"17","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/routing/PrivateRoute.js":"18","/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/profile.js":"19","/home/karlo/Documents/RESTful API/devcomunity/client/src/action/profile.js":"20","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Spinner.js":"21","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/CreateProfile.js":"22","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/dashboard/DashboardAction.js":"23","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/EditProfile.js":"24","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/AddExperience.js":"25","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/AddEducation.js":"26"},{"size":478,"mtime":1611788064677,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1611787268440,"results":"29","hashOfConfig":"28"},{"size":2276,"mtime":1612216885714,"results":"30","hashOfConfig":"28"},{"size":1358,"mtime":1612141495420,"results":"31","hashOfConfig":"28"},{"size":974,"mtime":1612141626162,"results":"32","hashOfConfig":"28"},{"size":3123,"mtime":1612057518602,"results":"33","hashOfConfig":"28"},{"size":1754,"mtime":1612057420229,"results":"34","hashOfConfig":"28"},{"size":377,"mtime":1611851055501,"results":"35","hashOfConfig":"28"},{"size":210,"mtime":1612135077413,"results":"36","hashOfConfig":"28"},{"size":395,"mtime":1611930703107,"results":"37","hashOfConfig":"28"},{"size":564,"mtime":1612213379936,"results":"38","hashOfConfig":"28"},{"size":333,"mtime":1611931034266,"results":"39","hashOfConfig":"28"},{"size":389,"mtime":1611930980454,"results":"40","hashOfConfig":"28"},{"size":1934,"mtime":1612142762206,"results":"41","hashOfConfig":"28"},{"size":1012,"mtime":1612142846131,"results":"42","hashOfConfig":"28"},{"size":366,"mtime":1612134292466,"results":"43","hashOfConfig":"28"},{"size":1242,"mtime":1612202696245,"results":"44","hashOfConfig":"28"},{"size":577,"mtime":1612134032909,"results":"45","hashOfConfig":"28"},{"size":711,"mtime":1612214041817,"results":"46","hashOfConfig":"28"},{"size":1996,"mtime":1612213973940,"results":"47","hashOfConfig":"28"},{"size":284,"mtime":1612200461603,"results":"48","hashOfConfig":"28"},{"size":6745,"mtime":1612204825514,"results":"49","hashOfConfig":"28"},{"size":708,"mtime":1612202674317,"results":"50","hashOfConfig":"28"},{"size":7407,"mtime":1612204785674,"results":"51","hashOfConfig":"28"},{"size":3217,"mtime":1612216006443,"results":"52","hashOfConfig":"28"},{"size":3275,"mtime":1612217619482,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1u74bqj",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/karlo/Documents/RESTful API/devcomunity/client/src/index.js",[],["109","110"],"/home/karlo/Documents/RESTful API/devcomunity/client/src/reportWebVitals.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/App.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Nav.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Landing.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/auth/Register.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/auth/Login.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/store.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/index.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/alert.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/action/types.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/action/alert.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Alert.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/action/auth.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/auth.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/util/tokenHeaderSet.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/dashboard/Dashboard.js",["111"],"import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentProfile } from \"../../action/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport DashboardAction from \"./DashboardAction\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const profile = useSelector((state) => state.profile.profile);\n  const isLoading = useSelector((state) => state.profile.isLoading);\n  const user = useSelector((state) => state.authReducer.user);\n\n  useEffect(() => {\n    dispatch(getCurrentProfile());\n  }, []);\n  return isLoading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\">Welcome {user && user.name}</i>\n      </p>\n      {profile !== null ? (\n        <Fragment>{<DashboardAction />}</Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/routing/PrivateRoute.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/reducers/profile.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/action/profile.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/layout/Spinner.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/CreateProfile.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/dashboard/DashboardAction.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/EditProfile.js",["112"],"import { useDispatch, useSelector } from \"react-redux\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { createProfile, getCurrentProfile } from \"../../action/profile\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst EditProfile = () => {\n  const profile = useSelector((state) => state.profile.profile);\n  const isLoading = useSelector((state) => state.profile.isLoading);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const initState = {\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  };\n  const [formData, setFormData] = useState(initState);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  useEffect(() => {\n    if (!profile) dispatch(getCurrentProfile());\n    if (!isLoading) {\n      const profileData = { ...initState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      setFormData(profileData);\n    }\n  }, [isLoading, getCurrentProfile, profile]);\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createProfile(formData, history, true));\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default EditProfile;\n","/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/AddExperience.js",[],"/home/karlo/Documents/RESTful API/devcomunity/client/src/components/profile-forms/AddEducation.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":16,"column":6,"nodeType":"119","endLine":16,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":57,"column":6,"nodeType":"119","endLine":57,"endColumn":45,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has missing dependencies: 'dispatch' and 'initState'. Either include them or remove the dependency array. Outer scope values like 'getCurrentProfile' aren't valid dependencies because mutating them doesn't re-render the component.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},"Update the dependencies array to be: [isLoading, profile, dispatch, initState]",{"range":"133","text":"134"},[616,618],"[dispatch]",[1468,1507],"[isLoading, profile, dispatch, initState]"]